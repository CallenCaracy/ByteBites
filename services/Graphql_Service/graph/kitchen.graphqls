# Custom scalar for handling timestamp values
scalar DateTime

# Enum matching the order_queue.status values in SQL
enum KitchenStatus {
  preparing
  ready
  complete
}

# Inventory type corresponding to the menu_stock table
type Inventory {
  id: ID!                   
  menuId: ID!                # Still maps to menu_id in inventory table
  availableServings: Int!   
  lowStockThreshold: Int!   
  lastUpdated: DateTime!    
}

# OrderQueue type corresponding to the order_queue table
type OrderQueue {
  id: ID!
  orderId: ID!
  status: KitchenStatus!
  createdAt: DateTime!
}

# Query for fetching inventory and order queues
extend type Query {
  # Inventory queries
  inventories: [Inventory!]!
  inventory(id: ID!): Inventory

  # OrderQueue queries
  orderQueues: [OrderQueue!]!
  orderQueue(id: ID!): OrderQueue
}

# Mutations for modifying inventory and order queue entries
extend type Mutation {
  # Inventory mutations
  createInventory(
    menuId: ID!
    availableServings: Int!
    lowStockThreshold: Int
  ): Inventory!

  updateInventory(
    id: ID!
    availableServings: Int
    lowStockThreshold: Int
  ): Inventory!

  deleteInventory(id: ID!): Boolean!

  # OrderQueue mutations
  createOrderQueue(
    orderId: ID!
    status: KitchenStatus
  ): OrderQueue!

  updateOrderQueue(
    id: ID!
    status: KitchenStatus
  ): OrderQueue!

  deleteOrderQueue(id: ID!): Boolean!
}

extend type Subscription {
  orderQueueCreated: OrderQueue!
}
