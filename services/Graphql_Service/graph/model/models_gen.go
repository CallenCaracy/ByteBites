// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"fmt"
	"io"
	"strconv"
)

type AddCartItemInput struct {
	UserID         string  `json:"user_id"`
	MenuItemID     string  `json:"menu_item_id"`
	Quantity       int32   `json:"quantity"`
	Price          float64 `json:"price"`
	Customizations *string `json:"customizations,omitempty"`
}

type AuthResponse struct {
	AccessToken  string `json:"accessToken"`
	RefreshToken string `json:"refreshToken"`
}

type Cart struct {
	ID        string      `json:"id"`
	UserID    string      `json:"user_id"`
	CreatedAt string      `json:"created_at"`
	UpdatedAt *string     `json:"updated_at,omitempty"`
	Items     []*CartItem `json:"items"`
}

type CartItem struct {
	ID             string  `json:"id"`
	CartID         string  `json:"cart_id"`
	MenuItemID     string  `json:"menu_item_id"`
	Quantity       int32   `json:"quantity"`
	Price          float64 `json:"price"`
	Customizations *string `json:"customizations,omitempty"`
	CreatedAt      string  `json:"created_at"`
	UpdatedAt      *string `json:"updated_at,omitempty"`
}

type ForgotPasswordInput struct {
	Email string `json:"email"`
}

type ForgotPasswordResponse struct {
	Success bool    `json:"success"`
	Message *string `json:"message,omitempty"`
}

type Inventory struct {
	ID                string  `json:"id"`
	ItemName          string  `json:"itemName"`
	Quantity          int32   `json:"quantity"`
	Unit              string  `json:"unit"`
	LowStockThreshold int32   `json:"lowStockThreshold"`
	ExpiryDate        *string `json:"expiryDate,omitempty"`
	LastUpdated       string  `json:"lastUpdated"`
}

type MenuItem struct {
	ID                 string  `json:"id"`
	Name               string  `json:"name"`
	Description        *string `json:"description,omitempty"`
	Price              float64 `json:"price"`
	Category           *string `json:"category,omitempty"`
	AvailabilityStatus bool    `json:"availability_status"`
	Discount           float64 `json:"discount"`
	ImageURL           *string `json:"image_url,omitempty"`
	CreatedAt          string  `json:"created_at"`
	UpdatedAt          *string `json:"updated_at,omitempty"`
}

type Mutation struct {
}

type NewMenuItem struct {
	Name               string  `json:"name"`
	Description        *string `json:"description,omitempty"`
	Price              float64 `json:"price"`
	Category           *string `json:"category,omitempty"`
	Discount           float64 `json:"discount"`
	AvailabilityStatus bool    `json:"availability_status"`
	ImageURL           *string `json:"image_url,omitempty"`
}

type Order struct {
	ID              string       `json:"id"`
	UserID          string       `json:"userID"`
	TotalPrice      float64      `json:"totalPrice"`
	OrderStatus     string       `json:"orderStatus"`
	OrderType       *string      `json:"orderType,omitempty"`
	DeliveryAddress *string      `json:"deliveryAddress,omitempty"`
	SpecialRequests *string      `json:"specialRequests,omitempty"`
	CreatedAt       string       `json:"createdAt"`
	UpdatedAt       *string      `json:"updatedAt,omitempty"`
	Items           []*OrderItem `json:"items"`
}

type OrderItem struct {
	ID             string  `json:"id"`
	OrderID        string  `json:"orderID"`
	MenuItemID     string  `json:"menuItemID"`
	Quantity       int32   `json:"quantity"`
	Price          float64 `json:"price"`
	Customizations *string `json:"customizations,omitempty"`
	CreatedAt      string  `json:"createdAt"`
}

type OrderQueue struct {
	ID          string        `json:"id"`
	OrderID     string        `json:"orderId"`
	Status      KitchenStatus `json:"status"`
	Priority    int32         `json:"priority"`
	LastUpdated string        `json:"lastUpdated"`
}

type Query struct {
}

type SignInInput struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

type SignUpInput struct {
	Email     string  `json:"email"`
	Password  string  `json:"password"`
	FirstName string  `json:"firstName"`
	LastName  string  `json:"lastName"`
	Role      string  `json:"role"`
	Address   *string `json:"address,omitempty"`
	Phone     *string `json:"phone,omitempty"`
	BirthDate string  `json:"birthDate"`
	UserType  string  `json:"userType"`
	Pfp       string  `json:"pfp"`
	Gender    *string `json:"gender,omitempty"`
}

type Subscription struct {
}

type TokenCheckResponse struct {
	ID    string `json:"id"`
	Email string `json:"email"`
}

type Transaction struct {
	TransactionID     string  `json:"transaction_id"`
	AmountPaid        float64 `json:"amount_paid"`
	PaymentMethod     string  `json:"payment_method"`
	Timestamp         string  `json:"timestamp"`
	TransactionStatus string  `json:"transaction_status"`
	UserID            string  `json:"user_id"`
	OrderID           string  `json:"order_id"`
}

type UpdateCartItemInput struct {
	ID             string   `json:"id"`
	Quantity       *int32   `json:"quantity,omitempty"`
	Price          *float64 `json:"price,omitempty"`
	Customizations *string  `json:"customizations,omitempty"`
}

type UpdateMenuItem struct {
	Name               *string  `json:"name,omitempty"`
	Description        *string  `json:"description,omitempty"`
	Price              *float64 `json:"price,omitempty"`
	Category           *string  `json:"category,omitempty"`
	Discount           float64  `json:"discount"`
	AvailabilityStatus *bool    `json:"availability_status,omitempty"`
	ImageURL           *string  `json:"image_url,omitempty"`
}

type UpdateUserInput struct {
	FirstName *string `json:"firstName,omitempty"`
	LastName  *string `json:"lastName,omitempty"`
	Address   *string `json:"address,omitempty"`
	Phone     *string `json:"phone,omitempty"`
	BirthDate *string `json:"birthDate,omitempty"`
	UserType  *string `json:"userType,omitempty"`
	Gender    *string `json:"gender,omitempty"`
	Pfp       *string `json:"pfp,omitempty"`
	IsActive  *string `json:"isActive,omitempty"`
}

type User struct {
	ID        string  `json:"id"`
	Email     string  `json:"email"`
	FirstName string  `json:"firstName"`
	LastName  string  `json:"lastName"`
	Role      string  `json:"role"`
	Address   *string `json:"address,omitempty"`
	Phone     *string `json:"phone,omitempty"`
	IsActive  string  `json:"isActive"`
	UserType  string  `json:"userType"`
	Pfp       *string `json:"pfp,omitempty"`
	Gender    *string `json:"gender,omitempty"`
	CreatedAt string  `json:"createdAt"`
	UpdatedAt *string `json:"updatedAt,omitempty"`
	BirthDate string  `json:"birthDate"`
}

type KitchenStatus string

const (
	KitchenStatusCooking   KitchenStatus = "cooking"
	KitchenStatusPreparing KitchenStatus = "preparing"
	KitchenStatusReady     KitchenStatus = "ready"
)

var AllKitchenStatus = []KitchenStatus{
	KitchenStatusCooking,
	KitchenStatusPreparing,
	KitchenStatusReady,
}

func (e KitchenStatus) IsValid() bool {
	switch e {
	case KitchenStatusCooking, KitchenStatusPreparing, KitchenStatusReady:
		return true
	}
	return false
}

func (e KitchenStatus) String() string {
	return string(e)
}

func (e *KitchenStatus) UnmarshalGQL(v any) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = KitchenStatus(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid KitchenStatus", str)
	}
	return nil
}

func (e KitchenStatus) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}
